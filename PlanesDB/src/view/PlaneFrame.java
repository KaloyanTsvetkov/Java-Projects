package view;

import controler.PlaneDBQueries;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.Plane;

//Start Class PlaneFrame
//general View Class
public class PlaneFrame extends javax.swing.JFrame {

    //PlaneFrame Class Fields.
    private PlaneDBQueries planeQueries;
    private List<Plane> planeList;
    private int currentEntryIndex;

    //Class constructor
    public PlaneFrame() {
        super("Planes"); //Call JFrame constructor
        try {
            //Inicializing PlaneDBQueries object.
            planeQueries = new PlaneDBQueries();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        initComponents(); //Create GUI
        setJComboBoxElements(); //Set ComboBox Model
        setLocationRelativeTo(null); //set Location to center
        //Disable Prev And Next Button
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        //Disable Update And Delete Button
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        //Add jFrame Window Listener - X button
        addWindowListener(
                new WindowAdapter() {
                    public void windowClosing(WindowEvent evt) {
                        planeQueries.close(); // close database connection
                        System.exit(0); //closing the application
                    } // end method windowClosing
                } // end anonymous inner class
        ); // end call to addWindowListener
    }//End Constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(new ImageIcon(getClass().getResource("/icons/plane.png")).getImage());
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Planes:");

        jButton1.setText("See Info");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/next-icon.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/previous-icon.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel2.setText("Planes");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Number:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Model:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Year:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Places:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Kilometers:");

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButton4.setText("See All Planes");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Found:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Numbers");

        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Add New");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel11)
                                    .addGap(87, 87, 87)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Action Listener for Delete Button
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Call DeleteJDialog constructor and pass to it all arguments
        final DeleteJDialog deleteJDialog = new DeleteJDialog(this, true, planeList.get(currentEntryIndex), planeQueries);
        //Visualising the Dialog Window
        deleteJDialog.setVisible(true);
        //Add a Window Listener. Listener wait the Dialog window to be closed
        deleteJDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                //After the Dialog Window closed (after execute delete query)
                //Disable Update And Delete Button
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
                //set all TextFields
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                try {
                    planeQueries = new PlaneDBQueries();//refresh DB connection after delete
                } catch (ClassNotFoundException ex) {
                    ex.printStackTrace();
                }
                setJComboBoxElements();//Update ComboBox information
            }
        }); // end call to addWindowListener
    }//GEN-LAST:event_jButton6ActionPerformed

    //Action Listener for Next Button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ++currentEntryIndex; //increase the current idex
        if (currentEntryIndex >= planeList.size()) {
            currentEntryIndex = 0;//set current idex to 0
        }//end if statement
        setPlaneTextFields(); //Call setPlaneTextFields method
    }//GEN-LAST:event_jButton2ActionPerformed

    //Action Listener for Previous Button 
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        --currentEntryIndex; //decrease the current idex
        if (currentEntryIndex < 0) {
            currentEntryIndex = planeList.size() - 1; //set current idex to 0
        }//end if statement
        setPlaneTextFields(); //Call setPlaneTextFields method
    }//GEN-LAST:event_jButton3ActionPerformed

    //Action Listener for See Info Button
    //Show Information for selected JComboBox Item
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Set the JButons to unactive
        jButton3.setEnabled(false);
        jButton2.setEnabled(false);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        Plane plane = (Plane) jComboBox1.getSelectedItem(); //get Object from JComboBox selected Item
        planeList = new ArrayList<Plane>();
        try {
            planeList = planeQueries.getPlaneByID(plane.getPlaneID()); //execute query "selectInfoByID"
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error! DataBase error call Admin!",
                    "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }//end catch
        jLabel9.setText(String.valueOf(planeList.size()));
        currentEntryIndex = 0;
        //if statement. Show result from exequted query
        if (planeList.size() > 0) {
            JOptionPane.showMessageDialog(this, "You can see the Info in \"Planes\" section!",
                    "Plane Information", JOptionPane.INFORMATION_MESSAGE);
            //if result is > 1. Make Prev. and Next JButtons Active.
            if (planeList.size() > 1) {
                jButton3.setEnabled(true);
                jButton2.setEnabled(true);
            }//end if statement
            setPlaneTextFields(); //Call the method to set All TextFields
        } else {
            JOptionPane.showMessageDialog(this, "Error! We don't have any Planes for this ID!",
                    "Plane Information", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Action Listener for See All Planes Button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //create a new HashMap<String, Plane>
        HashMap<String, Plane> planeMap = new HashMap<String, Plane>();
        //Make Delete and Update JButtons Active.
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        try {
            planeMap = planeQueries.getAllPlanes(); //execute query "selectAllPlanes"
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error! DataBase error call Admin!",
                    "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
        planeList = new ArrayList<Plane>();
        //Add HashMap Value to List
        for (Map.Entry<String, Plane> planeObject : planeMap.entrySet()) {
            planeList.add(planeObject.getValue());
        }
        jLabel9.setText(String.valueOf(planeList.size()));
        //if statement. Show result from exequted query
        if (!planeList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "You can see all Planes in \"Planes\" section !!!",
                    "Find All Planes", JOptionPane.INFORMATION_MESSAGE);
            //Make Prev. and Next JButtons Active.
            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
            currentEntryIndex = 0;
            setPlaneTextFields(); //Call the method to set All TextFields
        } else {
            JOptionPane.showMessageDialog(this, "We don't have any Planes !!!",
                    "Find All Planes", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    //Action Listener for Update Button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Call UpdateJDialog constructor and pass to it all arguments
        final UpdateJDialog updateJDialog = new UpdateJDialog(this, true, planeList.get(currentEntryIndex));
        //Visualising the Dialog Window
        updateJDialog.setVisible(true);
        //Add a Window Listener. Listener wait the Dialog window to be closed
        updateJDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                //Call method to refresh the information (from JDialog to JFrame) 
                setTextFieldAfterUpdate(updateJDialog.getPlane());
                //Anable Update And Delete Button
                jButton5.setEnabled(true);
                jButton6.setEnabled(true);
            }
        }); // end call to addWindowListener
    }//GEN-LAST:event_jButton5ActionPerformed

    //Action Listener for Add Button
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //Disable Prev And Next Button
        jButton3.setEnabled(false);
        jButton2.setEnabled(false);
        //Disable Update And Delete Button
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        HashMap<String, Plane> planeMap = new HashMap<String, Plane>();
        planeList = new ArrayList<Plane>();
        int result = 0;
        int places = 0;
        long km = 0;
        try {
            planeMap = planeQueries.getAllPlanes(); //execute query "selectAllPlanes"
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error! DataBase error call Admin!",
                    "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
        //If-Else statement. Check the PlaneID (Prymary Key)
        if ((!planeMap.containsKey(jTextField1.getText())) && (!jTextField1.getText().equals(""))) {
            //If-Else statement. Check for empty JText Fields
            if ((!jTextField2.getText().equals("")) && (!jTextField3.getText().equals(""))
                    && (!jTextField4.getText().equals("")) && (!jTextField5.getText().equals(""))) {
                //try-catch block. Check arguments
                try {
                    places = Integer.valueOf(jTextField4.getText());
                    km = Long.valueOf(jTextField5.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Error! Places and Kilometers must be numbers!!!",
                            "Number Format", JOptionPane.ERROR_MESSAGE);
                }//end try-catch
                //If-Else statement. Check for correct Places and Km
                if (places >= 0 && km >= 0) {
                    //try-catch block. Check for SQL Exeption
                    try {
                        result = planeQueries.addPlane(jTextField1.getText(),
                                jTextField2.getText(), jTextField3.getText(),
                                Long.valueOf(jTextField5.getText()), Integer.valueOf(jTextField4.getText()));
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Error! DataBase error call Admin!",
                                "DataBase Error", JOptionPane.ERROR_MESSAGE);
                    }//end try-catch

                    //if - else statement. Show result from exequted query
                    if (result != 0) {
                        setJComboBoxElements(); //Update information in JComboBox
                        JOptionPane.showMessageDialog(this, "Your Plane was Added!",
                                "Plane Information", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error! Your Plane was NOT Added!",
                                "Plane Information", JOptionPane.ERROR_MESSAGE);
                    }//end if - else statement. Show result from exequted query
                } else {
                    JOptionPane.showMessageDialog(this, "Error! Places or Kilometers must be >= 0!!!",
                            "Plane Information", JOptionPane.ERROR_MESSAGE);
                }//end if-else statement. Check for correct Places and Km
            } else {
                JOptionPane.showMessageDialog(this, "Error! Fields can't be empty!!!",
                        "Plane Information", JOptionPane.ERROR_MESSAGE);
            }//end if - else statement. Check for empty JText Fields
        } else {
            JOptionPane.showMessageDialog(this, "You allready have a plane with this number!",
                    "Plane Information", JOptionPane.ERROR_MESSAGE);
        }//end if - else statement. Check the PlaneID (Prymary Key)
    }//GEN-LAST:event_jButton7ActionPerformed

    //Method to set The TextFields and Labels for Prev. and Next Buttons
    private void setPlaneTextFields() {
        String planeID = planeList.get(currentEntryIndex).getPlaneID();
        jTextField1.setText(planeID);
        String model = planeList.get(currentEntryIndex).getModel();
        jTextField2.setText(model);
        String year = "" + planeList.get(currentEntryIndex).getYearOfProduce();
        jTextField3.setText(year);
        int places = planeList.get(currentEntryIndex).getPlaces();
        jTextField4.setText(String.valueOf(places));
        long km = planeList.get(currentEntryIndex).getTraveledKM();
        jTextField5.setText(String.valueOf(km));
        jLabel10.setText(String.valueOf(currentEntryIndex + 1));
        if (currentEntryIndex == 0) {
            jLabel11.setText(String.valueOf(planeList.size()));
        } else {
            jLabel11.setText(String.valueOf(currentEntryIndex - 1));
        }
    } //end method setPlaneTextFields 

    //Methd to update information After Update query
    public void setTextFieldAfterUpdate(Plane plane) {
        jTextField1.setText(plane.getPlaneID());
        jTextField2.setText(plane.getModel());
        jTextField3.setText(plane.getYearOfProduce());
        jTextField4.setText(String.valueOf(plane.getPlaces()));
        jTextField5.setText(String.valueOf(plane.getTraveledKM()));
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
    }//end method

    //Method to set JComboBox Model(Elements)
    private void setJComboBoxElements() {
        //Set ComboBox Model and execute "getAllPlanes" query
        try {
            jComboBox1.setModel(new DefaultComboBoxModel(planeQueries.getAllPlanes().values().toArray()));
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error! DataBase error call Admin(ComboBox)!",
                    "DataBase Error", JOptionPane.ERROR_MESSAGE);
        }
    }//end method
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}// end PlaneFrame Class
